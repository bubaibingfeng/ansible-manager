---
- name: Read kubeconfig from master
  slurp:
    path: "/root/.kube/config"
  register: cluster_kubeconfig
  ignore_errors: yes

- name: Store new cluster kubeconfig
  set_fact:
    kubeconfig: "{{ cluster_kubeconfig.content | b64decode |from_yaml }}"    
  ignore_errors: yes

- name: Display cluster kubeconfig
  debug:
    var: cluster_kubeconfig

- name: Display kubeconfig
  debug:
    var: kubeconfig


- name: Get cicd token
  uri:
    url: '{{ cicd_endpoint }}/login'
    body_format: json
    method: POST
    body: '{"username":"{{ cicd_user }}","password":"{{ cicd_passwd }}"}'
    body_format: json
    headers:
      Content-Type: application/json
        #Content-Type: application/x-www-form-urlencoded
    validate_certs: false
  register: response_token
  ignore_errors: yes

- name: Display response headers
  debug:
    var: response_token.x_auth_token

- name: Get clusters
  uri:
    url: '{{ cicd_endpoint }}/clusters/k8s/list-all-base'
    body_format: json
    method: GET
    headers:
      accept: '*'
      X-Auth-Token: '{{ response_token["x_auth_token"] }}'
        #X-Auth-Token: '25a8a83a-074e-4928-9f25-e1c94fc75502'
  register: response_clusters
  ignore_errors: yes

- name: Display response_clusters
  debug:
    var: response_clusters

- name: post kubeconfig
  uri:
    url: '{{ cicd_endpoint }}/clusters/k8s/insert'
    body_format: json
    method: POST
    body: '{"description":"{{ kubeconfig }}","name":"{{ argocd_cluster_name }}"}'
    body_format: json
    headers:
      Content-Type: application/json
        #Content-Type: application/x-www-form-urlencoded
      accept: '*'
      X-Auth-Token: '{{ response_token["x_auth_token"] }}'
        #X-Auth-Token: '4eff747f-63ab-4a69-b760-f2f5679d360e'
  register: response_kubeconfig
  ignore_errors: yes

- name: Display response headers
  debug:
    var: response_kubeconfig

      #- name: Get clusters
      #  uri:
      #    url: '{{ cicd_endpoint }}/clusters/k8s/list-all-base'
      #    body_format: json
      #    method: GET
      #    headers:
      #      accept: '*'
      #        #X-Auth-Token: '{{ response_token["x_auth_token"] }}'
      #      X-Auth-Token: '25a8a83a-074e-4928-9f25-e1c94fc75502'
      #  register: response_clusters
      #  ignore_errors: yes
    #- name: Create creates the cluster
    #  uri:
    #    url: '{{ argocd_endpoint }}/api/v1/clusters'
    #    method: POST
    #    body:
    #      # annotations:
    #      #   property1: string
    #      #   property2: string
    #      clusterResources: true
    #      config:
    #        tlsClientConfig:
    #          caData: '{{ kubeconfig["clusters"][0]["cluster"]["certificate-authority-data"] }}'
    #          certData: '{{ kubeconfig["users"][0]["user"]["client-certificate-data"] }}'
    #          insecure: false
    #          keyData: '{{ kubeconfig["users"][0]["user"]["client-key-data"] }}'
    #          serverName: '{{ master_ip }}'
    #      #labels:
    #      #  property1: string
    #      #  property2: string
    #      name: '{{ argocd_cluster_name }}'
    #      server: 'https://{{ master_ip }}:6443'
    #      serverVersion: '{{ kubeconfig["apiVersion"] }}'
    #      info:
    #        apiVersions:
    #          - '{{ kubeconfig["apiVersion"] }}'
    #    body_format: json
    #    headers:
    #      Authorization: 'Bearer {{ argocd_token["json"]["token"] }}'
    #      Content-Type: application/json
    #    follow_redirects: safe
    #    validate_certs: false
    #  register: result
    #  ignore_errors: yes
