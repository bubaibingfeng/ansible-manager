#!/usr/bin/bash
# 使用getopt解析命令行参数
TEMP=`getopt -o c:n:f: --long cluster:,node:,file: -n 'k3s-mgr' -- "$@"`

eval set -- "$TEMP"

# 提取选项和参数
while true ; do
    case "$1" in
        -c|--cluster)
            cluster=$2 ; shift 2 ;;
        -n|--node)
            node=$2 ; shift 2 ;;
        -f|--file)
            file=$2 ; shift 2 ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

# 剩余的参数应该是动作
action=$1

# 根据动作检查参数
case "$action" in
    init)
	ssh-keygen -f ~/.ssh/id_rsa -N ''
	echo -e "==============key==============\n"
	cat ~/.ssh/id_rsa.pub
	echo -e "\n"
        ;;
    list)
	ls ht-k3s-clusters/inventory
        ;;
    create|update|backup)
        if [ -n "$node" ]; then
            echo "Error: The '--node' option should not be used with 'create', 'update' or 'backup' action"
            exit 1
        fi
        ;;
    delete-node)
        if [ -z "$node" ]; then
            echo "Error: The '--node' option is required for 'delete-node' action"
            exit 1
        fi
        ;;
    restore)
        if [ -z "$file" ]; then
            echo "Error: The '--file' option is required for 'restore' action"
            exit 1
        fi
        ;;
    *)
        echo "Invalid action! Please provide one of: create, update, delete-node, backup, restore"
        exit 1
        ;;
esac

# 根据动作执行相应的操作
case "$action" in
    create)
        echo "Creating cluster $cluster" 
	cd ht-k3s-clusters/ && git pull &&  cd .. && ansible-playbook -i inventory/$cluster/hosts.ini --extra-vars "argocd_cluster_name=$cluster"  create-k3s-cluster.yaml
#	ansible-playbook -i inventory/$cluster/hosts.ini --extra-vars "argocd_cluster_name=$cluster"  create-k3s-cluster.yaml
        ;;
    update)
        echo "Updating cluster $cluster"
	#ansible-playbook -i inventory/$cluster/hosts.ini --extra-vars "argocd_cluster_name=$cluster"  create-k3s-cluster.yaml
	cd ht-k3s-clusters/ && git pull &&  cd .. && ansible-playbook -i inventory/$cluster/hosts.ini --extra-vars "argocd_cluster_name=$cluster"  create-k3s-cluster.yaml
        ;;
    delete-node)
        echo "Deleting node $node from cluster $cluster"
	ssh `cat ht-k3s-clusters/inventory/$cluster/hosts.ini | grep "\[master\]" -A 1 | tail -n +2 |awk '{print $2}'|awk -F = '{print $2}'`  "kubectl delete node $node"
	ansible-playbook -l $node -i inventory/$cluster/hosts.ini reset.yml
	sed -i "/$node/s/^#*/#/" ht-k3s-clusters/inventory/$cluster/hosts.ini
	cd ht-k3s-clusters && git add . && git commit -m "remove node" && git push
        ;;
    backup)
        echo "Backing up cluster $cluster"
	ansible-playbook -i inventory/$cluster/hosts.ini --extra-vars "k3s_backup_dir=/opt/k3s-backup/$cluster" --extra-vars "k3s_restore_token_file=/opt/k3s-backup/$cluster/token" backup.yml
        ;;
    restore)
        echo "Restoring cluster $cluster from file $file"
	ansible-playbook -i inventory/$cluster/hosts.ini --extra-vars "k3s_snapshot_restore_file=/opt/k3s-backup/$cluster/$file" --extra-vars "k3s_restore_token_file=/opt/k3s-backup/$cluster/token"  restore.yml
        ;;
esac
